function [transform_params, magnitudes, ...
          reconstructed_signal, optimization_info] = ...
            CompareWithGreedySolution(input_signal, ...
                                      Features, ...
                                      lambda, ...
                                      transform_params, ...
                                      magnitudes, ...
                                      reconstructed_signal, ...
                                      optimization_info, ...
                                      pars)
  AMP_SIGMA = 0.1;
    % Get CBP objective value
    whiten_fn = getWhiteningMtxFn(pars);
    cbp_whitened_residual = whiten_fn(numel(input_signal)) * ...
        reshape(input_signal - reconstructed_signal, [], 1);
    cbp_l2_term = 1 / (2 * pars.noise_sigma ^ 2) .* ...
                  sum(cbp_whitened_residual .^ 2);
	nonzero_mags = cell2mat(magnitudes);
    nonzero_mags = nonzero_mags(nonzero_mags > 0);
    cbp_prior_term = 0.5 / (AMP_SIGMA ^ 2) * ...
                     sum((nonzero_mags - 1) .^ 2);
    %cbp_prior_term = REWEIGHTING_COEFF * ...
    %                 sum(log(REWEIGHTING_SCALE + nonzero_mags));
    cbp_obj_value = cbp_l2_term + cbp_prior_term;
    if (isfield(pars, 'debug_mode') && pars.debug_mode)
        fprintf('CBP: L2=%0.3f\tPrior=%0.3f\n', ...
             cbp_l2_term, cbp_prior_term);
    end    
    % Get greedy objective value
    pars.greedy_p_value = Inf; % force a greedy solution
	optimization_info.weights = []; % Reset the weights.
    [greedy_transform_params, greedy_magnitudes, greedy_optimization_info] = ...
     pars.cbp_core_fn(input_signal, Features, pars.noise_sigma, ...
                      lambda, pars.spacings, optimization_info, pars);
    
    greedy_reconstructed_signal = ...
        reshape(greedy_optimization_info.Dictionary * ...
                greedy_optimization_info.raw_coeffs, ...
                size(input_signal));
    greedy_whitened_residual = whiten_fn(numel(input_signal)) * ...
        reshape(input_signal - greedy_reconstructed_signal, [], 1);

    greedy_l2_term = 1 / (2 * pars.noise_sigma ^ 2) .* ...
                     sum(greedy_whitened_residual .^ 2);
    nonzero_mags = cell2mat(greedy_magnitudes);
    nonzero_mags = nonzero_mags(nonzero_mags > 0);
    greedy_prior_term = 0.5 / (AMP_SIGMA ^ 2) * ...
                        sum((nonzero_mags - 1) .^ 2);
    %greedy_prior_term = REWEIGHTING_COEFF * ...
    %                    sum(log(REWEIGHTING_SCALE + nonzero_mags));
    greedy_obj_value = greedy_l2_term + greedy_prior_term;
    if (isfield(pars, 'debug_mode') && pars.debug_mode)
        fprintf('Greedy: L2=%0.3f\tPrior=%0.3f\n', ...
             greedy_l2_term, greedy_prior_term);
    end
    if (greedy_obj_value < cbp_obj_value) % Greedy is better
        if (isfield(pars, 'debug_mode') && pars.debug_mode)
            fprintf('Abandoning CBP solution (%f) and Going greedy(%f)!\n', ...
                   cbp_obj_value, greedy_obj_value);
        end
        transform_params = greedy_transform_params;
        magnitudes = greedy_magnitudes;
        optimization_info = greedy_optimization_info;
        reconstructed_signal = greedy_reconstructed_signal;    
        optimization_info.greedy_soln = true;
    else
        if (isfield(pars, 'debug_mode') && pars.debug_mode)
            fprintf('Sticking with CBP solution (%f) over greedy(%f)!\n', ...
                    cbp_obj_value, greedy_obj_value);
        end                
    end